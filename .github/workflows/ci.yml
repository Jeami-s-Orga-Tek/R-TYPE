name: R-Type CI/CD

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]
    tags:
      - "v*"

jobs:
  build-test-fedora:
    name: Build & Test (Fedora 41)
    runs-on: ubuntu-latest
    container:
      image: fedora:41
    env:
      BUILD_DIR: build
    steps:
      - name: Install sudo & build dependencies
        run: |
          dnf -y update
          dnf -y install sudo
          sudo dnf -y install @development-tools cmake ninja-build git python3 python3-pip \
            ccache clang clang-tools-extra curl which
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Cache vcpkg / conan
        uses: actions/cache@v4
        with:
          path: |
            /root/.conan/data
            /root/.cache/vcpkg
            vcpkg_installed
          key: deps-fedora-${{ hashFiles('vcpkg.json', 'conanfile.*') }}
      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: /root/.ccache
          key: ccache-fedora-${{ hashFiles('**/*.cpp','**/*.h') }}
      - name: Install project dependencies
        run: sudo ./ci/install_deps.sh
      - name: Configure CMake
        run: sudo cmake -S . -B $BUILD_DIR -G Ninja -DCMAKE_BUILD_TYPE=Release
      - name: Build project
        run: sudo cmake --build $BUILD_DIR --parallel
      - name: Run tests
        run: sudo ./ci/test.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rtype-fedora
          path: |
            ${{ env.BUILD_DIR }}/r-type_server
            ${{ env.BUILD_DIR }}/r-type_client

  build-test-windows:
    name: Build & Test (Windows)
    runs-on: windows-latest
    env:
      BUILD_DIR: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Cache vcpkg / conan
        uses: actions/cache@v4
        with:
          path: |
            C:\Users\runneradmin\.conan\data
            C:\Users\runneradmin\AppData\Local\vcpkg\archives
          key: deps-windows-${{ hashFiles('vcpkg.json', 'conanfile.*') }}
      - name: Install dependencies
        run: ./ci/install_deps.sh
        shell: bash
      - name: Configure CMake
        run: cmake -S . -B $env:BUILD_DIR -G "Ninja" -DCMAKE_BUILD_TYPE=Release
      - name: Build project
        run: cmake --build $env:BUILD_DIR --config Release --parallel
      - name: Run tests
        run: ./ci/test.sh
        shell: bash
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rtype-windows
          path: |
            ${{ env.BUILD_DIR }}\r-type_server.exe
            ${{ env.BUILD_DIR }}\r-type_client.exe

  clang-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run clang-format check
        run: ./ci/check_clang_format.sh

  publish-docker:
    needs: [build-test-fedora]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download server artifact
        uses: actions/download-artifact@v4
        with:
          name: rtype-fedora
      - name: Build & push Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/rtype-server:${{ github.ref_name }} -f docker/Dockerfile.server .
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          docker push ghcr.io/${{ github.repository_owner }}/rtype-server:${{ github.ref_name }}
