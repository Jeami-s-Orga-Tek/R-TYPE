name: R-Type CI/CD

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]
    tags:
      - "v*"

jobs:
  build-test:
    name: Build & Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    env:
      BUILD_DIR: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache vcpkg / conan
        uses: actions/cache@v4
        with:
          path: |
            ~/.conan/data
            ~/.cache/vcpkg
            vcpkg_installed
          key: deps-${{ matrix.os }}-${{ hashFiles('vcpkg.json', 'conanfile.*') }}

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ccache-${{ matrix.os }}-${{ hashFiles('**/*.cpp','**/*.h') }}

      - name: Install dependencies
        run: ./ci/install_deps.sh

      - name: Configure CMake
        run: cmake -S . -B $BUILD_DIR -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build project
        run: cmake --build $BUILD_DIR --config Release --parallel

      - name: Run tests
        run: ./ci/test.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rtype-${{ matrix.os }}
          path: |
            ${{ env.BUILD_DIR }}/r-type_server
            ${{ env.BUILD_DIR }}/r-type_client

  clang-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run clang-format
        run: ./ci/check_clang_format.sh

  publish-docker:
    needs: [build-test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download server artifact
        uses: actions/download-artifact@v4
        with:
          name: rtype-ubuntu-latest
      - name: Build & push Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/rtype-server:${{ github.ref_name }} -f docker/Dockerfile.server .
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
          docker push ghcr.io/${{ github.repository_owner }}/rtype-server:${{ github.ref_name }}
