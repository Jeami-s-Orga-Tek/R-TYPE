name: R-Type CI/CD

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]
    tags:
      - "v*"

jobs:
  build-linux:
    name: Build & Test (Linux)
    runs-on: ubuntu-latest
    env:
      BUILD_DIR: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build git python3 python3-pip \
            autoconf automake libtool libltdl-dev libx11-dev libxext-dev libglu1-mesa-dev libfreetype6-dev

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: ~/.cache/vcpkg
          key: vcpkg-${{ hashFiles('vcpkg.json') }}

      - name: Install project dependencies
        run: |
          git clone https://github.com/microsoft/vcpkg.git vcpkg
          ./vcpkg/bootstrap-vcpkg.sh
          ./vcpkg/vcpkg install --triplet x64-linux

      - name: Configure CMake
        run: cmake -S . -B $BUILD_DIR -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build project
        run: cmake --build $BUILD_DIR --parallel

      - name: Run tests
        run: ./ci/test.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rtype-linux
          path: |
            ${{ env.BUILD_DIR }}/r-type_server
            ${{ env.BUILD_DIR }}/r-type_client

  build-windows:
    name: Build & Test (Windows)
    runs-on: windows-latest
    env:
      BUILD_DIR: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Chocolatey dependencies
        run: choco install -y cmake ninja python

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: C:\Users\runneradmin\AppData\Local\vcpkg\archives
          key: vcpkg-windows-${{ hashFiles('vcpkg.json') }}

      - name: Install project dependencies
        run: |
          git clone https://github.com/microsoft/vcpkg.git vcpkg
          .\vcpkg\bootstrap-vcpkg.bat
          .\vcpkg\vcpkg.exe install --triplet x64-windows
        shell: powershell

      - name: Configure CMake
        run: cmake -S . -B $env:BUILD_DIR -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=.\vcpkg\scripts\buildsystems\vcpkg.cmake
        shell: powershell

      - name: Build project
        run: cmake --build $env:BUILD_DIR --config Release --parallel
        shell: powershell

      - name: Run tests
        run: ./ci/test.sh
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rtype-windows
          path: |
            ${{ env.BUILD_DIR }}\r-type_server.exe
            ${{ env.BUILD_DIR }}\r-type_client.exe

  clang-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run clang-format check
        run: ./ci/check_clang_format.sh
